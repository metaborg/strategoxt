module dr-propconst-tests-2
imports
  dr-test-utils

/**
 * This test suite uses constant propagation for TIL programs
 * as a real-life test of the dynamic rules library.
 */

strategies

  main =
    propconst-tests-2

  propconst-tests-2 =
    test-suite(!"Dynamic Rules Library -- Constant Propagation (part 2)",
      where(separation-message(|"Dynamic Rules Library -- Constant Propagation -- Combined Break & Continue Tests"))
    ; pc-break-and-continue-tests
    ; where(separation-message(|"Dynamic Rules Library -- Constant Propagation -- Exception Tests"))
    ; pc-exception-tests
    ; pc-exception-tests-fin
    ; pc-exception-tests-loop
    )

strategies

  pc-break-and-continue-tests = id

  ; apply-propconst-test(!"Check break/continue scenario #1" |
      "var x; x := 1;
       while c() do
         f(x);
         if c() then x := 1; break; else x := 1; continue; end
         x := 2;
       end
       f(x);",
      "var x; x := 1;
       while c() do
         f(1);
         if c() then x := 1; break; else x := 1; continue; end
         x := 2;
       end
       f(1);"
    )

  ; apply-propconst-test(!"Check break/continue scenario #2" |
      "var x; x := 1;
       l1: while c() do
         l2: while c() do
           f(x);
           if c() then x := 1; continue l1; else x := 1; break l1; end
           x := 2;
         end
         x := 2;
       end
       f(x);",
      "var x; x := 1;
       l1: while c() do
         l2: while c() do
           f(1);
           if c() then x := 1; continue l1; else x := 1; break l1; end
           x := 2;
         end
         x := 2;
       end
       f(1);"
    )

  ; apply-propconst-test(!"Check break/continue scenario #3" |
      "var x; x := 1;
       l1: while c() do
         l2: while c() do
           f(x);
           if c() then x := 1; continue l2; else x := 1; break l1; end
           x := 2;
         end
         x := 2;
       end
       f(x);",
      "var x; x := 1;
       l1: while c() do
         l2: while c() do
           f(x);
           if c() then x := 1; continue l2; else x := 1; break l1; end
           x := 2;
         end
         x := 2;
       end
       f(x);"
    )

  ; apply-propconst-test(!"Check break/continue scenario #4" |
      "var x; x := 1;
       l1: while c() do
         l2: while c() do
           f(x);
           if c() then x := 1; continue l1; else x := 1; break l2; end
           x := 2;
         end
         x := 2;
       end
       f(x);",
      "var x; x := 1;
       l1: while c() do
         l2: while c() do
           f(x);
           if c() then x := 1; continue l1; else x := 1; break l2; end
           x := 2;
         end
         x := 2;
       end
       f(x);"
    )

  ; apply-propconst-test(!"Check break/continue scenario #5" |
      "var x; x := 1;
       l1: while c() do
         f(x); if c() then x := 1; break; else x := 1; end
         l2: while c() do
           f(x); if c() then x := 1; continue l1; end
           if c() then x := 1; break; end
           if c() then x := 1; continue; end
           l3: while c() do
             f(x); if c() then x := 1; break l2; end
             if c() then x := 1; continue l3; end
             if c() then x := 1; break l1; end
             if c() then x := 1; continue l2; end
             if c() then x := 1; continue l1; end
             if c() then x := 1; break l3; end
           end
           f(x);
         end
         f(x);
       end
       f(x);",
      "var x; x := 1;
       l1: while c() do
         f(1); if c() then x := 1; break; else x := 1; end
         l2: while c() do
           f(1); if c() then x := 1; continue l1; end
           if c() then x := 1; break; end
           if c() then x := 1; continue; end
           l3: while c() do
             f(1); if c() then x := 1; break l2; end
             if c() then x := 1; continue l3; end
             if c() then x := 1; break l1; end
             if c() then x := 1; continue l2; end
             if c() then x := 1; continue l1; end
             if c() then x := 1; break l3; end
           end
           f(1);
         end
         f(1);
       end
       f(1);"
    )

  ; apply-propconst-test(!"Check break/continue scenario #6" |
      "var x; x := 1;
       l1: while c() do
         f(x); if c() then x := 1; break; else x := 1; end
         l2: while c() do
           f(x); if c() then x := 1; continue l1; end
           if c() then x := 1; break; end
           if c() then x := 1; continue; end
           l3: while c() do
             f(x); if c() then x := 1; break l2; end
             if c() then x := 2; continue l3; end
             if c() then x := 2; break l1; end
             if c() then x := 1; continue l2; end
             if c() then x := 1; continue l1; end
             if c() then x := 1; break l3; end
           end
           f(x); x := 1;
         end
         f(x);
       end
       f(x);",
      "var x; x := 1;
       l1: while c() do
         f(1); if c() then x := 1; break; else x := 1; end
         l2: while c() do
           f(1); if c() then x := 1; continue l1; end
           if c() then x := 1; break; end
           if c() then x := 1; continue; end
           l3: while c() do
             f(x); if c() then x := 1; break l2; end
             if c() then x := 2; continue l3; end
             if c() then x := 2; break l1; end
             if c() then x := 1; continue l2; end
             if c() then x := 1; continue l1; end
             if c() then x := 1; break l3; end
           end
           f(x); x := 1;
         end
         f(1);
       end
       f(x);"
    )

  ; apply-propconst-test(!"Check break/continue scenario #7" |
      "var x; x := 1;
       l1: while c() do
         f(x); if c() then x := 1; break; else x := 1; end
         l2: while c() do
           f(x); if c() then x := 1; continue l1; end
           if c() then x := 1; break; end
           if c() then x := 1; continue; end
           l3: while c() do
             f(x); if c() then x := 2; break l2; end
             if c() then x := 1; continue l3; end
             if c() then x := 1; break l1; end
             if c() then x := 1; continue l2; end
             if c() then x := 2; continue l1; end
             if c() then x := 1; break l3; end
           end
           f(x);
         end
         f(x); x := 1;
       end
       f(x);",
      "var x; x := 1;
       l1: while c() do
         f(x); if c() then x := 1; break; else x := 1; end
         l2: while c() do
           f(1); if c() then x := 1; continue l1; end
           if c() then x := 1; break; end
           if c() then x := 1; continue; end
           l3: while c() do
             f(1); if c() then x := 2; break l2; end
             if c() then x := 1; continue l3; end
             if c() then x := 1; break l1; end
             if c() then x := 1; continue l2; end
             if c() then x := 2; continue l1; end
             if c() then x := 1; break l3; end
           end
           f(1);
         end
         f(x); x := 1;
       end
       f(x);"
    )

  ; apply-propconst-test(!"Check break/continue scenario #8" |
      "var x; x := 1;
       l1: while c() do
         f(x);
         l2: while c() do
           f(x);
           if c() then
             if c() then x := 1; break; else x := 1; continue l1; end
           else
             if c() then
               if c() then x := 1; continue; else x := 1; break l1; end
             else
               if c() then x := 1; break l1; end
             end
           end
           x := 1;
         end
         f(x);
       end
       f(x);",
      "var x; x := 1;
       l1: while c() do
         f(1);
         l2: while c() do
           f(1);
           if c() then
             if c() then x := 1; break; else x := 1; continue l1; end
           else
             if c() then
               if c() then x := 1; continue; else x := 1; break l1; end
             else
               if c() then x := 1; break l1; end
             end
           end
           x := 1;
         end
         f(1);
       end
       f(1);"
    )

  ; apply-propconst-test(!"Check break/continue scenario #9" |
      "var x; x := 1;
       l1: while c() do
         f(x);
         l2: while c() do
           f(x);
           if c() then
             if c() then x := 1; break; else x := 1; continue l1; end
           else
             if c() then
               if c() then x := 2; continue; else x := 1; break l1; end
             else
               if c() then x := 1; break l1; end
             end
           end
           x := 1;
         end
         f(x); x := 1;
       end
       f(x);",
      "var x; x := 1;
       l1: while c() do
         f(1);
         l2: while c() do
           f(x);
           if c() then
             if c() then x := 1; break; else x := 1; continue l1; end
           else
             if c() then
               if c() then x := 2; continue; else x := 1; break l1; end
             else
               if c() then x := 1; break l1; end
             end
           end
           x := 1;
         end
         f(x); x := 1;
       end
       f(1);"
    )

  ; apply-propconst-test(!"Check break/continue scenario #10" |
      "var x; x := 1;
       l1: while c() do
         f(x);
         l2: while c() do
           f(x);
           if c() then
             if c() then x := 1; break; else x := 1; continue l1; end
           else
             if c() then
               if c() then x := 1; continue; else x := 1; break l1; end
             else
               if c() then x := 1; break l1; end
             end
           end
           x := 2;
         end
         f(x); x := 1;
       end
       f(x);",
      "var x; x := 1;
       l1: while c() do
         f(1);
         l2: while c() do
           f(x);
           if c() then
             if c() then x := 1; break; else x := 1; continue l1; end
           else
             if c() then
               if c() then x := 1; continue; else x := 1; break l1; end
             else
               if c() then x := 1; break l1; end
             end
           end
           x := 2;
         end
         f(x); x := 1;
       end
       f(1);"
    )

  pc-exception-tests = id

  ; apply-propconst-test(!"Exception test #1" |
      "var x;
       try
         if c() then x := 1; throw F; else x := 2; throw E; end
       catch (e: E)
         f(x); x := 1;
       catch (f: F)
         f(x); x := 1;
       end
       f(x);",
      "var x;
       try
         if c() then x := 1; throw F; else x := 2; throw E; end
       catch (e: E)
         f(2); x := 1;
       catch (f: F)
         f(1); x := 1;
       end
       f(1);"
    )

  ; apply-propconst-test(!"Exception test #2" |
      "var x;
       try
         if c() then
           if c() then x := 1; throw F; else x := 2; throw E; end
         else
           x := 1;
         end
       catch (e: E)
         f(x); x := 1;
       catch (f: F)
         f(x); x := 1;
       end
       f(x);",
      "var x;
       try
         if c() then
           if c() then x := 1; throw F; else x := 2; throw E; end
         else
           x := 1;
         end
       catch (e: E)
         f(2); x := 1;
       catch (f: F)
         f(1); x := 1;
       end
       f(1);"
    )

  ; apply-propconst-test(!"Exception test #3" |
      "var x;
       try
         if c() then
           if c() then x := 1; throw F; else x := 2; throw E; end
         else
           x := 2;
         end
       catch (e: E)
         f(x); x := 1;
       catch (f: F)
         f(x); x := 1;
       end
       f(x);",
      "var x;
       try
         if c() then
           if c() then x := 1; throw F; else x := 2; throw E; end
         else
           x := 2;
         end
       catch (e: E)
         f(2); x := 1;
       catch (f: F)
         f(1); x := 1;
       end
       f(x);"
    )
    
  ; apply-propconst-test(!"Exception test #4" |
      "var x;
       try
         if c() then
           if c() then x := 1; throw F; else x := 2; throw E; end
         else
           x := 1;
         end
       catch (e: E)
         f(x);
       catch (f: F)
         f(x); x := 1;
       end
       f(x);",
      "var x;
       try
         if c() then
           if c() then x := 1; throw F; else x := 2; throw E; end
         else
           x := 1;
         end
       catch (e: E)
         f(2);
       catch (f: F)
         f(1); x := 1;
       end
       f(x);"
     )

  ; apply-propconst-test(!"Exception test #5" |
      "var x;
       try
         x := 1;
         try
           if c() then x := 1; throw A; end
           if c() then x := 1; throw E; end
           if c() then x := 1; throw F; end
           if c() then
             if c() then x := 2; throw A; else x := 1; throw E; end
           else
             x := 2;
           end
         catch (a: A)
           f(x); x := 1;
           if c() then throw E; end
         end
         f(x);
         if c() then throw F; end
         x := 2;
       catch (e: E)
         f(x);
         try
           if c() then x := 2; throw B; else x := 2; end
         catch (b: B)
           f(x);
         end
       catch (f: F)
         f(x); x := 2;
       end
       f(x);",
      "var x;
       try
         x := 1;
         try
           if c() then x := 1; throw A; end
           if c() then x := 1; throw E; end
           if c() then x := 1; throw F; end
           if c() then
             if c() then x := 2; throw A; else x := 1; throw E; end
           else
             x := 2;
           end
         catch (a: A)
           f(x); x := 1;
           if c() then throw E; end
         end
         f(x);
         if c() then throw F; end
         x := 2;
       catch (e: E)
         f(1);
         try
           if c() then x := 2; throw B; else x := 2; end
         catch (b: B)
           f(2);
         end
       catch (f: F)
         f(x); x := 2;
       end
       f(2);"
     )

  ; apply-propconst-test(!"Exception test #6" |
      "var x;
       try
         x := 1;
         try
           if c() then x := 1; throw A; end
           if c() then x := 2; throw E; end
           if c() then x := 1; throw F; end
           if c() then
             if c() then x := 1; throw A; else x := 2; throw E; end
           else
             x := 2;
           end
         catch (a: A)
           f(x); x := 2;
           if c() then throw E; end
         end
         f(x);
         if c() then x := 2; throw F; end
         x := 2;
       catch (e: E)
         f(x);
         try
           if c() then x := 2; throw B; else x := 2; end
         catch (b: B)
           f(x);
         end
       catch (f: F)
         f(x); x := 1;
       end
       f(x);",
      "var x;
       try
         x := 1;
         try
           if c() then x := 1; throw A; end
           if c() then x := 2; throw E; end
           if c() then x := 1; throw F; end
           if c() then
             if c() then x := 1; throw A; else x := 2; throw E; end
           else
             x := 2;
           end
         catch (a: A)
           f(1); x := 2;
           if c() then throw E; end
         end
         f(2);
         if c() then x := 2; throw F; end
         x := 2;
       catch (e: E)
         f(2);
         try
           if c() then x := 2; throw B; else x := 2; end
         catch (b: B)
           f(2);
         end
       catch (f: F)
         f(x); x := 1;
       end
       f(x);"
     )

  pc-exception-tests-fin = id

  ; apply-propconst-test(!"Exception test #7" |
      "var x;
       try
         if c() then x := 1; throw F; else x := 2; throw E; end
       catch (e: E)
         f(x); x := 1;
       catch (f: F)
         f(x); x := 1;
       finally
         f(x); x := 2;
       end
       f(x);",
      "var x;
       try
         if c() then x := 1; throw F; else x := 2; throw E; end
       catch (e: E)
         f(2); x := 1;
       catch (f: F)
         f(1); x := 1;
       finally
         f(1); x := 2;
       end
       f(2);"
    )

  ; apply-propconst-test(!"Exception test #8" |
      "var x;
       try
         if c() then x := 1; throw F; else x := 2; throw E; end
       catch (e: E)
         f(x); x := 1;
       catch (f: F)
         f(x); x := 2;
       finally
         f(x); x := 2;
       end
       f(x);",
      "var x;
       try
         if c() then x := 1; throw F; else x := 2; throw E; end
       catch (e: E)
         f(2); x := 1;
       catch (f: F)
         f(1); x := 2;
       finally
         f(x); x := 2;
       end
       f(2);"
    )

  ; apply-propconst-test(!"Exception test #9" |
      "var x;
       try
         if c() then x := 1; throw F; else x := 2; end
         if c() then x := 2; throw E; else x := 2; end
       catch (e: E)
         f(x); x := 1;
       catch (f: F)
         f(x); x := 1;
       finally
         f(x); x := 2;
       end
       f(x);",
      "var x;
       try
         if c() then x := 1; throw F; else x := 2; end
         if c() then x := 2; throw E; else x := 2; end
       catch (e: E)
         f(2); x := 1;
       catch (f: F)
         f(1); x := 1;
       finally
         f(x); x := 2;
       end
       f(2);"
    )

  ; apply-propconst-test(!"Exception test #10" |
      "var x;
       try
         x := 1;
         try
           if c() then x := 1; throw A; end
           if c() then x := 1; throw E; end
           if c() then x := 1; throw F; end
           if c() then
             if c() then x := 2; throw A; else x := 1; throw E; end
           else
             x := 1;
           end
         catch (a: A)
           f(x); x := 1;
           if c() then throw E; end
         finally
           f(x);
         end
         f(x);
         if c() then throw F; end
         x := 2;
       catch (e: E)
         f(x);
         try
           if c() then x := 2; throw B; else x := 2; end
         catch (b: B)
           f(x);
         end
       catch (f: F)
         f(x); x := 2;
       finally
         f(x);
       end
       f(x);",
      "var x;
       try
         x := 1;
         try
           if c() then x := 1; throw A; end
           if c() then x := 1; throw E; end
           if c() then x := 1; throw F; end
           if c() then
             if c() then x := 2; throw A; else x := 1; throw E; end
           else
             x := 1;
           end
         catch (a: A)
           f(x); x := 1;
           if c() then throw E; end
         finally
           f(1);
         end
         f(1);
         if c() then throw F; end
         x := 2;
       catch (e: E)
         f(1);
         try
           if c() then x := 2; throw B; else x := 2; end
         catch (b: B)
           f(2);
         end
       catch (f: F)
         f(1); x := 2;
       finally
         f(2);
       end
       f(2);"
     )

  ; apply-propconst-test(!"Exception test #11" |
      "var x;
       try
         x := 1;
         try
           if c() then x := 1; throw A; end
           if c() then x := 1; throw E; end
           if c() then x := 1; throw F; end
           if c() then
             if c() then x := 2; throw A; else x := 1; throw E; end
           else
             x := 1;
           end
         catch (a: A)
           f(x); x := 1;
           if c() then throw E; end
         finally
           f(x); x := 2;
         end
         f(x);
         if c() then x := 1; throw F; end
         x := 2;
       catch (e: E)
         f(x);
         try
           if c() then x := 2; throw B; else x := 2; end
         catch (b: B)
           f(x);
         end
       catch (f: F)
         f(x); x := 2;
       finally
         f(x);
       end
       f(x);",
      "var x;
       try
         x := 1;
         try
           if c() then x := 1; throw A; end
           if c() then x := 1; throw E; end
           if c() then x := 1; throw F; end
           if c() then
             if c() then x := 2; throw A; else x := 1; throw E; end
           else
             x := 1;
           end
         catch (a: A)
           f(x); x := 1;
           if c() then throw E; end
         finally
           f(1); x := 2;
         end
         f(2);
         if c() then x := 1; throw F; end
         x := 2;
       catch (e: E)
         f(2);
         try
           if c() then x := 2; throw B; else x := 2; end
         catch (b: B)
           f(2);
         end
       catch (f: F)
         f(x); x := 2;
       finally
         f(2);
       end
       f(2);"
     )

  ; apply-propconst-test(!"Exception test #12" |
      "var x;
       try
         x := 1;
         try
           if c() then x := 1; throw A; end
           if c() then x := 1; throw E; end
           if c() then x := 1; throw F; end
           if c() then
             if c() then x := 2; throw A; else x := 2; throw E; end
           else
             x := 1;
           end
         catch (a: A)
           f(x); x := 1;
           if c() then throw E; end
         finally
           f(x); if c() then x := 2; throw E; else x := 3; throw F; end
         end
       catch (e: E)
         f(x);
         try
           if c() then x := 2; throw B; else x := 2; end
         catch (b: B)
           f(x);
         end
       catch (f: F)
         f(x); x := 2;
       finally
         f(x);
       end
       f(x);",
      "var x;
       try
         x := 1;
         try
           if c() then x := 1; throw A; end
           if c() then x := 1; throw E; end
           if c() then x := 1; throw F; end
           if c() then
             if c() then x := 2; throw A; else x := 2; throw E; end
           else
             x := 1;
           end
         catch (a: A)
           f(x); x := 1;
           if c() then throw E; end
         finally
           f(x); if c() then x := 2; throw E; else x := 3; throw F; end
         end
       catch (e: E)
         f(2);
         try
           if c() then x := 2; throw B; else x := 2; end
         catch (b: B)
           f(2);
         end
       catch (f: F)
         f(3); x := 2;
       finally
         f(2);
       end
       f(2);"
     )

  ; apply-propconst-test(!"Exception test #13" |
      "var x;
       try
         x := 1;
         try
           if c() then x := 1; throw A; end
           if c() then x := 1; throw E; end
           if c() then x := 1; throw F; end
           if c() then
             if c() then x := 2; throw A; else x := 1; throw E; end
           else
             x := 1;
           end
         catch (a: A)
           f(x); x := 1;
           if c() then throw E; end
         finally
           f(x); if c() then x := 3; throw F; end
         end
         f(x);
         if c() then throw F; end
         x := 2;
       catch (e: E)
         f(x);
         try
           if c() then x := 2; throw B; else x := 2; end
         catch (b: B)
           f(x);
         end
       catch (f: F)
         f(x); x := 2;
       finally
         f(x);
       end
       f(x);",
      "var x;
       try
         x := 1;
         try
           if c() then x := 1; throw A; end
           if c() then x := 1; throw E; end
           if c() then x := 1; throw F; end
           if c() then
             if c() then x := 2; throw A; else x := 1; throw E; end
           else
             x := 1;
           end
         catch (a: A)
           f(x); x := 1;
           if c() then throw E; end
         finally
           f(1); if c() then x := 3; throw F; end
         end
         f(1);
         if c() then throw F; end
         x := 2;
       catch (e: E)
         f(1);
         try
           if c() then x := 2; throw B; else x := 2; end
         catch (b: B)
           f(2);
         end
       catch (f: F)
         f(x); x := 2;
       finally
         f(2);
       end
       f(2);"
     )

  ; apply-propconst-test(!"Exception test #14" |
      "var x;
       try
         try
           try
             x := 1;
             if c() then x := 2; throw A; end
             if c() then x := 2; throw B; end
             if c() then x := 2; throw C; end
             if c() then x := 2; throw D; end
             if c() then x := 2; throw E; end
           catch (a: A) f(x);
           catch (b: B) f(x);
           end
           if c() then x := 3; throw B; end
         catch (b: B) f(x);
         catch (c: C) f(x);
         catch (d: D) f(x);
         end
         if c() then x := 4; throw B; end
       catch (b: B) f(x);
       catch (e: E) f(x);
       finally f(x);
       end",
      "var x;
       try
         try
           try
             x := 1;
             if c() then x := 2; throw A; end
             if c() then x := 2; throw B; end
             if c() then x := 2; throw C; end
             if c() then x := 2; throw D; end
             if c() then x := 2; throw E; end
           catch (a: A) f(2);
           catch (b: B) f(2);
           end
           if c() then x := 3; throw B; end
         catch (b: B) f(3);
         catch (c: C) f(2);
         catch (d: D) f(2);
         end
         if c() then x := 4; throw B; end
       catch (b: B) f(4);
       catch (e: E) f(2);
       finally f(x);
       end"
     )

  ; apply-propconst-test(!"Exception test #15" |
      "var x;
       try
         try
           try
             x := 1;
             if c() then x := 2; throw A; end
             if c() then x := 2; throw B; end
             if c() then x := 2; throw C; end
             if c() then x := 2; throw D; end
             if c() then x := 2; throw E; end
           catch (a: A) f(x);
           catch (b: B) f(x);
           finally f(x); if c() then x := 3; throw B; end
           end
         catch (b: B) f(x);
         catch (c: C) f(x);
         catch (d: D) f(x);
         end
         if c() then x := 4; throw B; end
       catch (b: B) f(x);
       catch (e: E) f(x);
       finally f(x);
       end",
      "var x;
       try
         try
           try
             x := 1;
             if c() then x := 2; throw A; end
             if c() then x := 2; throw B; end
             if c() then x := 2; throw C; end
             if c() then x := 2; throw D; end
             if c() then x := 2; throw E; end
           catch (a: A) f(2);
           catch (b: B) f(2);
           finally f(x); if c() then x := 3; throw B; end
           end
         catch (b: B) f(3);
         catch (c: C) f(x);
         catch (d: D) f(x);
         end
         if c() then x := 4; throw B; end
       catch (b: B) f(4);
       catch (e: E) f(x);
       finally f(x);
       end"
     )

  ; apply-propconst-test(!"Exception test #16" |
      "var x;
       try
         try
           try
             x := 1;
             if c() then x := 2; throw A; end
             if c() then x := 2; throw B; end
             if c() then x := 2; throw C; end
             if c() then x := 2; throw D; end
             if c() then x := 2; throw E; end
           catch (a: A) f(x);
           catch (b: B) f(x);
           finally f(x); if c() then x := 3; throw B; end x := 4;
           end
         catch (b: B) f(x);
         catch (c: C) f(x);
         catch (d: D) f(x);
         finally f(x); if c() then x := 4; throw B; end
         end
       catch (b: B) f(x);
       catch (e: E) f(x);
       finally f(x);
       end",
      "var x;
       try
         try
           try
             x := 1;
             if c() then x := 2; throw A; end
             if c() then x := 2; throw B; end
             if c() then x := 2; throw C; end
             if c() then x := 2; throw D; end
             if c() then x := 2; throw E; end
           catch (a: A) f(2);
           catch (b: B) f(2);
           finally f(x); if c() then x := 3; throw B; end x := 4;
           end
         catch (b: B) f(3);
         catch (c: C) f(4);
         catch (d: D) f(4);
         finally f(x); if c() then x := 4; throw B; end
         end
       catch (b: B) f(4);
       catch (e: E) f(x);
       finally f(x);
       end"
     )

  ; apply-propconst-test(!"Exception test #17" |
      "var x;
       try
         try
           try
             x := 1;
             if c() then x := 2; throw A; end
             if c() then x := 2; throw B; end
             if c() then x := 2; throw C; end
             if c() then x := 2; throw D; end
             if c() then x := 2; throw E; end
           catch (a: A) f(x);
           catch (b: B) f(x);
           finally f(x); if c() then x := 3; throw B; end x := 4;
           end
         catch (b: B) f(x);
         catch (c: C) f(x);
         catch (d: D) f(x);
         end
         if c() then x := 4; throw B; end
       catch (b: B) f(x);
       catch (e: E) f(x);
       finally f(x);
       end",
      "var x;
       try
         try
           try
             x := 1;
             if c() then x := 2; throw A; end
             if c() then x := 2; throw B; end
             if c() then x := 2; throw C; end
             if c() then x := 2; throw D; end
             if c() then x := 2; throw E; end
           catch (a: A) f(2);
           catch (b: B) f(2);
           finally f(x); if c() then x := 3; throw B; end x := 4;
           end
         catch (b: B) f(3);
         catch (c: C) f(4);
         catch (d: D) f(4);
         end
         if c() then x := 4; throw B; end
       catch (b: B) f(4);
       catch (e: E) f(4);
       finally f(x);
       end"
     )

  ; apply-propconst-test(!"Exception test #18" |
      "var x;
       try
         try
           try
             x := 1;
             if c() then x := 2; throw A; else x := 2; throw A; end
             if c() then x := 2; throw B; else x := 2; throw B; end
             if c() then x := 2; throw C; end
             if c() then x := 2; throw D; end
             if c() then x := 2; throw E; end
           catch (a: A) f(x);
           catch (b: B) f(x);
           end
           if c() then x := 3; throw B; end
           if c() then x := 2; throw C; end
           if c() then x := 2; throw D; end
         catch (b: B) f(x);
         catch (c: C) f(x);
         catch (d: D) f(x);
         end
         if c() then x := 4; throw B; end
         if c() then x := 2; throw E; end
       catch (b: B) f(x);
       catch (e: E) f(x);
       finally f(x);
       end",
      "var x;
       try
         try
           try
             x := 1;
             if c() then x := 2; throw A; else x := 2; throw A; end
             if c() then x := 2; throw B; else x := 2; throw B; end
             if c() then x := 2; throw C; end
             if c() then x := 2; throw D; end
             if c() then x := 2; throw E; end
           catch (a: A) f(2);
           catch (b: B) f(2);
           end
           if c() then x := 3; throw B; end
           if c() then x := 2; throw C; end
           if c() then x := 2; throw D; end
         catch (b: B) f(3);
         catch (c: C) f(2);
         catch (d: D) f(2);
         end
         if c() then x := 4; throw B; end
         if c() then x := 2; throw E; end
       catch (b: B) f(4);
       catch (e: E) f(2);
       finally f(x);
       end"
     )

  ; apply-propconst-test(!"Exception test #19" |
      "var x;
       try
         try
           try
             x := 1;
             if c() then x := 2; throw A; else x := 3; throw A; end
             if c() then x := 2; throw B; else x := 3; throw B; end
             if c() then x := 2; throw C; end
             if c() then x := 2; throw D; end
             if c() then x := 2; throw E; end
           catch (a: A) f(x);
           catch (b: B) f(x);
           end
           if c() then x := 3; throw B; end
           if c() then x := 3; throw C; end
           if c() then x := 3; throw D; end
         catch (b: B) f(x);
         catch (c: C) f(x);
         catch (d: D) f(x);
         end
         if c() then x := 4; throw B; end
         if c() then x := 3; throw E; end
       catch (b: B) f(x);
       catch (e: E) f(x);
       finally f(x);
       end",
      "var x;
       try
         try
           try
             x := 1;
             if c() then x := 2; throw A; else x := 3; throw A; end
             if c() then x := 2; throw B; else x := 3; throw B; end
             if c() then x := 2; throw C; end
             if c() then x := 2; throw D; end
             if c() then x := 2; throw E; end
           catch (a: A) f(x);
           catch (b: B) f(x);
           end
           if c() then x := 3; throw B; end
           if c() then x := 3; throw C; end
           if c() then x := 3; throw D; end
         catch (b: B) f(3);
         catch (c: C) f(x);
         catch (d: D) f(x);
         end
         if c() then x := 4; throw B; end
         if c() then x := 3; throw E; end
       catch (b: B) f(4);
       catch (e: E) f(x);
       finally f(x);
       end"
     )

  pc-exception-tests-loop = id

  ; apply-propconst-test(!"Exception test #20" |
      "var x; x := 1;
       while c() do
         try
           if c() then x := 2; throw E; end
           if c() then x := 3; throw F; end
         catch (e: E)
           f(x); x := 1;
         catch (f: F)
           f(x); x := 1;
         end
       end
       f(x);",
      "var x; x := 1;
       while c() do
         try
           if c() then x := 2; throw E; end
           if c() then x := 3; throw F; end
         catch (e: E)
           f(2); x := 1;
         catch (f: F)
           f(3); x := 1;
         end
       end
       f(1);"
     )

  ; apply-propconst-test(!"Exception test #21" |
      "var x; x := 1;
       while c() do
         try
           if c() then throw E; end
           x := 2;
         catch (e: E)
           f(x); x := 1;
         end
       end
       f(x);",
      "var x; x := 1;
       while c() do
         try
           if c() then throw E; end
           x := 2;
         catch (e: E)
           f(x); x := 1;
         end
       end
       f(x);"
     )

  ; apply-propconst-test(!"Exception test #22" |
      "var x; x := 2;
       try
         while c() do
           if c() then x := 1; throw E; end
           x := 2;
         end
         f(x);
       catch (e: E)
         f(x); x := 2;
       end
       f(x);",
      "var x; x := 2;
       try
         while c() do
           if c() then x := 1; throw E; end
           x := 2;
         end
         f(2);
       catch (e: E)
         f(1); x := 2;
       end
       f(2);"
     )

  ; apply-propconst-test(!"Exception test #23" |
      "var x; x := 1;
       try
         while c() do
           if c() then throw E; end
           x := 2;
         end
         f(x);
       catch (e: E)
         f(x); x := 1;
       end
       f(x);",
      "var x; x := 1;
       try
         while c() do
           if c() then throw E; end
           x := 2;
         end
         f(x);
       catch (e: E)
         f(x); x := 1;
       end
       f(x);"
     )

  ; apply-propconst-test(!"Exception test #24" |
      "var x; x := 1;
       try
         while c() do
           if c() then x := 1; throw E; end
           if c() then x := 1; throw E; end
           x := 2;
         end
         f(x);
       catch (e: E)
         f(x); x := 1;
       end
       f(x);",
      "var x; x := 1;
       try
         while c() do
           if c() then x := 1; throw E; end
           if c() then x := 1; throw E; end
           x := 2;
         end
         f(x);
       catch (e: E)
         f(1); x := 1;
       end
       f(x);"
     )

  ; apply-propconst-test(!"Exception test #25" |
      "var x; x := 1;
       try
         while c() do
           if c() then x := 1; throw E; end
           if c() then throw E; end
           x := 2;
         end
         f(x);
       catch (e: E)
         f(x); x := 1;
       end
       f(x);",
      "var x; x := 1;
       try
         while c() do
           if c() then x := 1; throw E; end
           if c() then throw E; end
           x := 2;
         end
         f(x);
       catch (e: E)
         f(x); x := 1;
       end
       f(x);"
     )

  ; apply-propconst-test(!"Exception test #26" |
      "var x; x := 1;
       try
         if c() then x := 2; throw E; end
         while c() do
           try
             if c() then x := 2; throw E; end
             if c() then x := 1; throw A; end
             if c() then x := 1; throw B; end
             if c() then x := 2; throw A; end
           catch (a: A) f(x); x := 1;
           catch (b: B) f(x); x := 1;
           finally f(x); x := 2;
           end
         end
         f(x);
       catch (e: E) f(x);
       end
       f(x);",
      "var x; x := 1;
       try
         if c() then x := 2; throw E; end
         while c() do
           try
             if c() then x := 2; throw E; end
             if c() then x := 1; throw A; end
             if c() then x := 1; throw B; end
             if c() then x := 2; throw A; end
           catch (a: A) f(x); x := 1;
           catch (b: B) f(1); x := 1;
           finally f(x); x := 2;
           end
         end
         f(x);
       catch (e: E) f(2);
       end
       f(x);"
     )

  ; apply-propconst-test(!"Exception test #27" |
      "var x; x := 1;
       try
         if c() then x := 2; throw E; end
         while c() do
           try
             if c() then x := 2; throw E; end
             if c() then x := 1; throw A; end
             if c() then x := 1; throw B; end
             if c() then x := 2; throw A; end
           catch (a: A) f(x); x := 1;
           catch (b: B) f(x); x := 1;
           finally f(x); x := 1;
           end
         end
         f(x);
       catch (e: E) f(x); x := 1;
       end
       f(x);",
      "var x; x := 1;
       try
         if c() then x := 2; throw E; end
         while c() do
           try
             if c() then x := 2; throw E; end
             if c() then x := 1; throw A; end
             if c() then x := 1; throw B; end
             if c() then x := 2; throw A; end
           catch (a: A) f(x); x := 1;
           catch (b: B) f(1); x := 1;
           finally f(x); x := 1;
           end
         end
         f(1);
       catch (e: E) f(x); x := 1;
       end
       f(1);"
     )

  ; apply-propconst-test(!"Exception test #28" |
      "var x; x := 1;
       try
         if c() then x := 2; throw E; end
         while c() do
           try
             if c() then x := 1; throw E; end
             if c() then x := 1; throw A; end
             if c() then x := 1; throw B; end
             if c() then x := 1; throw A; end
           catch (a: A) f(x); x := 2;
           catch (b: B) f(x); x := 1;
           finally f(x); x := 1;
           end
         end
         f(x);
       catch (e: E) f(x); x := 1;
       end
       f(x);",
      "var x; x := 1;
       try
         if c() then x := 2; throw E; end
         while c() do
           try
             if c() then x := 1; throw E; end
             if c() then x := 1; throw A; end
             if c() then x := 1; throw B; end
             if c() then x := 1; throw A; end
           catch (a: A) f(1); x := 2;
           catch (b: B) f(1); x := 1;
           finally f(x); x := 1;
           end
         end
         f(1);
       catch (e: E) f(x); x := 1;
       end
       f(1);"
     )
