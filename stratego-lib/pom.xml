<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>stratego-lib</artifactId>
  <packaging>jar</packaging>

  <parent>
    <groupId>org.metaborg</groupId>
    <artifactId>parent.java</artifactId>
    <version>2.6.0-SNAPSHOT</version>
    <relativePath>../../releng/parent/java</relativePath>
  </parent>

  <properties>
    <strjInputDir>${project.basedir}/src/main/strategies</strjInputDir>
    <strjOutputDir>${project.build.directory}/generated-sources/strj</strjOutputDir>
    <strjPackage>org.strategoxt.stratego_lib</strjPackage>
    <strjInputFile>${strjInputDir}/stratego-lib-posix-xsi.str</strjInputFile>
    <strjCTreeFile>${project.build.outputDirectory}/stratego-lib-posix-xsi.ctree</strjCTreeFile>
    <!-- Can be adapted to do bootstrap build hopefully -->
    <strjVersion>${metaborg-version}</strjVersion>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.metaborg</groupId>
      <artifactId>org.strategoxt.strj</artifactId>
      <version>${strjVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.metaborg</groupId>
      <artifactId>stratego-junit-bridge</artifactId>
      <scope>test</scope>
      <version>${metaborg-version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>package name to dir</id>
            <goals>
              <goal>regex-property</goal>
            </goals>
            <configuration>
              <name>strjPackageDir</name>
              <value>${strjPackage}</value>
              <regex>\.</regex>
              <replacement>/</replacement>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.metaborg</groupId>
        <artifactId>spoofax-maven-plugin</artifactId>
        <version>${metaborg-version}</version>
        <extensions>true</extensions>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <!-- Using version 3 here to avoid double execution of all maven goals -->
        <version>3.0.0</version>
        <extensions>true</extensions>
        <configuration>
          <manifestLocation>META-INF</manifestLocation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>org.metaborg</groupId>
            <artifactId>strategoxt-jar</artifactId>
            <version>${strjVersion}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>strj front</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <addOutputToClasspath>false</addOutputToClasspath>
              <includeProjectDependencies>false</includeProjectDependencies>
              <includePluginDependencies>true</includePluginDependencies>
              <!-- workaround for bug in 1.6.0 of this plugin -->
              <longModulepath>false</longModulepath>
              <executable>java</executable>
              <arguments>
                <arguments>-Xms512m</arguments>
                <arguments>-Xmx1024m</arguments>
                <arguments>-Xss16m</arguments>
                <argument>-jar</argument>
                <argument>${settings.localRepository}/org/metaborg/strategoxt-jar/${strjVersion}/strategoxt-jar-${strjVersion}.jar</argument>
                <argument>-p</argument>
                <argument>${strjPackage}</argument>
                <argument>--library</argument>
                <argument>-la</argument>
                <argument>org.strategoxt.lang.compat.override.java_integration</argument>
                <argument>-la</argument>
                <argument>org.strategoxt.lang.compat.override.performance_tweaks</argument>
                <argument>-la</argument>
                <argument>org.strategoxt.lang.compat.override.native_calls_compat</argument>
                <argument>--cache-dir</argument>
                <argument>${project.build.directory}/stratego-cache</argument>
                <argument>--verbose</argument>
                <argument>error</argument>
                <argument>-i</argument>
                <argument>${strjInputFile}</argument>
                <argument>-o</argument>
                <argument>${strjCTreeFile}</argument>
                <argument>-F</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>mkdir</id>
            <phase>initialize</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <!-- workaround for bug in 1.6.0 of this plugin -->
              <longModulepath>false</longModulepath>
              <executable>mkdir</executable>
              <arguments>
                <argument>-p</argument>
                <argument>${strjOutputDir}/${strjPackageDir}</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>strj back</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <addOutputToClasspath>false</addOutputToClasspath>
              <includeProjectDependencies>false</includeProjectDependencies>
              <includePluginDependencies>true</includePluginDependencies>
              <sourceRoot>${strjOutputDir}</sourceRoot>
              <!-- workaround for bug in 1.6.0 of this plugin -->
              <longModulepath>false</longModulepath>
              <executable>java</executable>
              <arguments>
                <arguments>-Xms512m</arguments>
                <arguments>-Xmx1024m</arguments>
                <arguments>-Xss16m</arguments>
                <argument>-jar</argument>
                <argument>${settings.localRepository}/org/metaborg/strategoxt-jar/${strjVersion}/strategoxt-jar-${strjVersion}.jar</argument>
                <argument>-p</argument>
                <argument>${strjPackage}</argument>
                <argument>--library</argument>
                <argument>-la</argument>
                <argument>org.strategoxt.lang.compat.override.java_integration</argument>
                <argument>-la</argument>
                <argument>org.strategoxt.lang.compat.override.performance_tweaks</argument>
                <argument>-la</argument>
                <argument>org.strategoxt.lang.compat.override.native_calls_compat</argument>
                <argument>--cache-dir</argument>
                <argument>${project.build.directory}/stratego-cache</argument>
                <argument>--verbose</argument>
                <argument>error</argument>
                <argument>-i</argument>
                <argument>${strjCTreeFile}</argument>
                <argument>-o</argument>
                <argument>${strjOutputDir}/${strjPackageDir}/Main.java</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <strj-sut>${settings.localRepository}/org/metaborg/strategoxt-jar/${strjVersion}/strategoxt-jar-${strjVersion}.jar</strj-sut>
          </systemPropertyVariables>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
