<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>stratego-gradual-types</artifactId>
  <packaging>jar</packaging>

  <parent>
    <groupId>org.metaborg</groupId>
    <artifactId>parent.java</artifactId>
    <version>2.6.0-SNAPSHOT</version>
    <relativePath>../../releng/parent/java</relativePath>
  </parent>

  <dependencies>
    <dependency>
      <groupId>org.metaborg</groupId>
      <artifactId>org.strategoxt.strj</artifactId>
      <version>${metaborg-version}</version>
    </dependency>
  </dependencies>

  <properties>
    <strjInputDir>${project.basedir}/src/main/strategies</strjInputDir>
    <strjOutputDir>${project.build.directory}/generated-sources/strj</strjOutputDir>
    <strjPackage>mb.stratego.gradual_types</strjPackage>
    <strjPackageDir>mb/stratego/gradual_types</strjPackageDir>
    <strjIncludesDir>${project.build.directory}/replicate/strj-includes</strjIncludesDir>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.metaborg</groupId>
        <artifactId>spoofax-maven-plugin</artifactId>
        <version>${metaborg-version}</version>
        <extensions>true</extensions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/java</source>
                <source>target/generated-sources/strj</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <!-- Required to add a dependency on the Spoofax plugin, otherwise unpacking will fail with a class cast 
          exception on archivers. Fix from: http://maven.40175.n5.nabble.com/Problems-with-register-new-archive-type-td4574906.html -->
        <dependencies>
          <dependency>
            <groupId>org.metaborg</groupId>
            <artifactId>spoofax-maven-plugin</artifactId>
            <version>${metaborg-version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>get-strj</id>
            <phase>initialize</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifact>org.metaborg:strategoxt-jar:${metaborg-version}</artifact>
              <overWriteSnapshots>true</overWriteSnapshots>
              <stripClassifier>true</stripClassifier>
              <stripVersion>true</stripVersion>
            </configuration>
          </execution>
          <execution>
            <id>get-libspoofax</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifact>org.metaborg:meta.lib.spoofax:${metaborg-version}:spoofax-language</artifact>
              <overWriteSnapshots>true</overWriteSnapshots>
              <outputDirectory>${strjIncludesDir}/libspoofax</outputDirectory>
              <includes>**/*.str</includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>mkdir</id>
            <phase>initialize</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <!-- workaround for bug in 1.6.0 of this plugin -->
              <longModulepath>false</longModulepath>
              <executable>mkdir</executable>
              <arguments>
                <argument>-p</argument>
                <argument>${strjOutputDir}/${strjPackageDir}</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>strj</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <addOutputToClasspath>false</addOutputToClasspath>
              <!-- workaround for bug in 1.6.0 of this plugin -->
              <longModulepath>false</longModulepath>
              <executable>java</executable>
              <arguments>
                <argument>-jar</argument>
                <argument>${project.build.directory}/dependency/strategoxt-jar.jar</argument>
                <argument>-i</argument>
                <argument>${strjInputDir}/main.str</argument>
                <argument>-p</argument>
                <argument>${strjPackage}</argument>
                <argument>--library</argument>
                <argument>-o</argument>
                <argument>${strjOutputDir}/${strjPackageDir}/Main.java</argument>
                <argument>-I</argument>
                <argument>${strjIncludesDir}/libspoofax/trans</argument>
                <argument>-la</argument>
                <argument>stratego-lib</argument>
                <argument>-la</argument>
                <argument>stratego-sglr</argument>
                <argument>-la</argument>
                <argument>stratego-gpp</argument>
                <argument>-la</argument>
                <argument>stratego-xtc</argument>
                <argument>-la</argument>
                <argument>stratego-aterm</argument>
                <argument>-la</argument>
                <argument>stratego-sdf</argument>
                <argument>-la</argument>
                <argument>strc</argument>
                <argument>--cache-dir</argument>
                <argument>${project.build.directory}/stratego-cache</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>

