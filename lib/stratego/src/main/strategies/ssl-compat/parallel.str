module parallel
imports process pipe
strategies

  // par(s1, s2) : apply strategies s1 and s2 in parallel to the subject term
  // and construct the pair (<s1>, <s2>)

  par(s1, s2) =
    where(pipe => p)
    ; fork({t1: (s1 <+ <exit> 1) => t1
              ; <stdout-to-pipe> p
              ; <WriteToTextFile> (stdout, t1)
              ; <exit> 0})
    ; ?(pid, t)
    ; <s2> t => t2
    ; <read-term-from-pipe> p => t1
    ; <waitpid> pid 
    ; (exited + signaled + stopped)
    ; !(t1, t2)

  // note failure in s2 will cause trouble: no data written to stdout
  // what will the behaviour of read-term-from-pipe be?
